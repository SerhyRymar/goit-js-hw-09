{"mappings":"iiBACA,IAAAA,EAAAC,EAAA,S,aA8BmFC,GAGjE,IAAIC,SAAQ,SAACC,EAASC,GACpC,IAAMC,EAASC,KAAKD,SAAW,GAE/BE,YAAW,WACLF,EACFF,EAAQ,CAAEK,SAAAC,EAAUC,MAAAT,IAEpBG,EAAO,CAAEI,SAAAC,EAAUC,MAAAT,G,GAEpBA,E,IAIFU,MAAK,SAAAC,G,IAAGJ,EAAQI,EAARJ,SAAUE,EAAKE,EAALF,MACjBG,EAAAd,GAASe,OAAOC,QAAQ,uBAAwCC,OAAfR,EAAS,QAAYQ,OAANN,EAAM,M,IAEvEO,OAAM,SAAAL,G,IAAGJ,EAAQI,EAARJ,SAAUE,EAAKE,EAALF,MAClBG,EAAAd,GAASe,OAAOI,QAAQ,sBAAqCF,OAAfR,EAAS,QAAYQ,OAANN,EAAM,M,KA9C5D,CACXS,KAAMC,SAASC,cAAc,WAG1BF,KAAKG,iBAAiB,U,YAQzBC,EAAEC,iBAMF,IAJA,IAAIC,EAAYF,EAAEG,cAAchB,MAAMiB,cAChCC,EAAYL,EAAEG,cAAcG,KAAKF,cACjCG,EAAkBP,EAAEG,cAAcK,OAAOJ,cAEtCnB,EAAW,EAAGA,GAAYsB,EAAiBtB,GAAY,EAC9DwB,EAAcxB,EAAUiB,GACxBA,GAAaG,C","sources":["src/js/03-promises.js"],"sourcesContent":["// 1. Підключаємо бібліотеку \nimport Notiflix from 'notiflix';\n\n\n// 2. Знаходимо посилання \nconst refs = {\n  form: document.querySelector('.form'),\n};\n\nrefs.form.addEventListener('submit', onFormSubmit);\n\n\n/*3. Напиши скрипт, який на момент сабміту форми викликає функцію createPromise(position, delay) \nстільки разів, скільки ввели в поле amount.Під час кожного виклику передай їй номер промісу(position),\nщо створюється, і затримку, враховуючи першу затримку(delay), введену користувачем, і крок(step).*/\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n\n  let mainDelay = e.currentTarget.delay.valueAsNumber;\n  const delayStep = e.currentTarget.step.valueAsNumber;\n  const amountOfPromise = e.currentTarget.amount.valueAsNumber;\n\n  for (let position = 1; position <= amountOfPromise; position += 1) {\n    createPromise(position, mainDelay);\n    mainDelay += delayStep;\n  }\n}\n\n/*4. Доповни код функції createPromise таким чином, щоб вона повертала один проміс,\nякий виконується або відхиляється через delay часу.Значенням промісу повинен бути об'єкт,\nв якому будуть властивості position і delay зі значеннями однойменних параметрів.*/\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    const random = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (random) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n\n  promise\n    .then(({ position, delay }) => {\n      Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n}\n"],"names":["$iU1Pc","parcelRequire","delay1","Promise","resolve","reject","random","Math","setTimeout","position","position1","delay","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","form","document","querySelector","addEventListener","e","preventDefault","mainDelay","currentTarget","valueAsNumber","delayStep","step","amountOfPromise","amount","$ce04d3a99e08e73b$var$createPromise"],"version":3,"file":"03-promises.b5a3ba15.js.map"}